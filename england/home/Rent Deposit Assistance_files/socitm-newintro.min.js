var socitm = socitm || {}; socitm.conf = { disabled: false, debug: false, force: false, supersetid: "1", ratio: 5, lang: "en-GB", cookies: { include: "socitm_include_me", exclude: "socitm_exclude_me" } }; socitm.base = { init: function () { if (typeof window["socitm_custcode"] !== "undefined") { socitm.conf.code = window["socitm_custcode"] } if (typeof window["socitm_intro_file"] !== "undefined") { socitm.conf.intro = window["socitm_intro_file"] } if (typeof window["socitm_my_domains"] !== "undefined") { socitm.conf.domains = window["socitm_my_domains"] } if (typeof window["socitm_language_opt"] !== "undefined") { socitm.conf.lang = window["socitm_language_opt"] } socitm.conf.force = location.search.toLowerCase().indexOf("socitmforcepop") > -1; socitm.conf.debug = location.search.toLowerCase().indexOf("socitmdebug") > -1; if (window.XMLHttpRequest) { if (socitm.utils.areCookiesEnabled() || socitm.conf.force) { var e = socitm.utils.getJSON(SOCITM_BASE_URL + "/jsconfig/socitm_proxy.aspx?ref=" + socitm.conf.code); var t = setInterval(function () { if (socitm.conf.loaded === true) { clearInterval(t); if (socitm.utils.getCookie(socitm.conf.cookies.exclude) === "" || socitm.conf.force) { if (!socitm.conf.disabled) { socitm.base.check() } } } }, 500); socitm.utils.getJSON(SOCITM_BASE_URL + "/hitcounter.aspx?code=" + socitm.conf.code) } } }, check: function () { var e = socitm.utils.getCookie(socitm.conf.cookies.include); if (e !== "" && e.indexOf("inprogress|") >= 0) { socitm.conf.lang = e.substring(e.indexOf("|") + 1); socitm.base.reminder() } else { if (socitm.conf.ratio > 0 && Math.floor(Math.random() * socitm.conf.ratio) === 0 || socitm.conf.force) { socitm.base.prompt() } } }, prompt: function () { var e = socitm.base.translations(socitm.conf.lang); socitm.base.addLozenge(e.entry, 300); socitm.utils.getJSON(SOCITM_BASE_URL + "/popcounter.aspx?code=" + socitm.conf.code + "&lang_code=" + socitm.conf.lang) }, addLozenge: function (e, t) { var n = socitm.utils.addElement("LINK", { rel: "stylesheet", href: SOCITM_CDN_URL + "/css/intro.css?v=" + SOCITM_VERSION }, "HEAD"); var r = socitm.utils.addElement("DIV", { id: "socitm_lozenge_container" }, "BODY"); var i = socitm.utils.addElement("DIV", { id: "socitm_lozenge", "class": e.css }); var s = socitm.utils.addElement("DIV", { id: "socitm_lozenge_content" }); var o = socitm.utils.addElement("DIV", { id: "socitm_lozenge_intro" }); o.innerHTML = e.intro; var u = socitm.utils.addElement("DIV", { id: "socitm_buttons" }); for (var a = 0; a < e.buttons.length; a++) { var f = e.buttons[a]; var l = socitm.utils.addElement("DIV", { "class": f.css }); var c = socitm.utils.addElement("DIV", { "class": "socitm_button_area" }); var h = socitm.utils.addElement("A", { href: f.href, "data-participate": f.participate, "data-lang": f.language, target: "_blank" }); h.innerHTML = f.label; c.appendChild(h); l.appendChild(c); u.appendChild(l); socitm.utils.addClick(h, function (e) { e.preventDefault ? e.preventDefault() : e.returnValue = false; var t = e.currentTarget ? e.currentTarget : e.srcElement; socitm.base.participate(t.getAttribute("data-participate").toString() === "true", t.getAttribute("data-lang")) }) } u.appendChild(socitm.utils.addElement("DIV", { "class": "socitm_platform" })); s.appendChild(o); s.appendChild(u); i.appendChild(s); var p = socitm.utils.addElement("DIV", { "class": "socitm_platform" }); i.appendChild(p); r.appendChild(i); setTimeout(function () { socitm.utils.slide("up", i) }, t) }, participate: function (e, t) { socitm.base.hide(); if (e) { if (socitm.utils.getCookie(socitm.conf.cookies.include) === "") { socitm.conf.lang = t; socitm.utils.setCookie(socitm.conf.cookies.include, "inprogress|" + t, null); socitm.base.reminder() } else { socitm.utils.setCookie(socitm.conf.cookies.include, "true", -1); socitm.utils.setCookie(socitm.conf.cookies.exclude, "true", 365); socitm.base.survey() } } else { socitm.utils.setCookie(socitm.conf.cookies.exclude, "true", 365) } }, reminder: function () { var e = socitm.base.translations(socitm.conf.lang); socitm.base.addLozenge(e.exit, 2e3) }, survey: function () { socitm.utils.addElement("SCRIPT", { type: "text/javascript", src: SOCITM_CDN_URL + "/js10/socitm-survey.js?v=" + SOCITM_VERSION }, "BODY") }, hide: function () { var e = document.getElementById("socitm_lozenge_container"); e.parentNode.removeChild(e) }, translations: function (e) { switch (e.toLowerCase()) { case "cy-gb": { return { entry: { css: "socitm_entry", intro: "Hoffem adborth ar ddiwedd eich ymweliad", buttons: [{ label: "Iawn - cliciwch y tab 'adborth' pan fyddwch yn barod", participate: true, language: e, css: "socitm_button socitm_btn_y", href: SOCITM_BASE_URL + "/survey.aspx?code=" + socitm.conf.code + "&lang_code=" + e }, { label: "Na", participate: false, language: e, css: "socitm_button socitm_btn_n", href: "#" }] }, exit: { css: "socitm_exit", intro: "", buttons: [{ label: "Adborth", participate: true, language: e, css: "socitm_button socitm_btn_y", href: SOCITM_BASE_URL + "/survey.aspx?code=" + socitm.conf.code + "&lang_code=" + e }] } } } break; case "xh-za": { return { entry: { css: "socitm_entry", intro: "Please complete a short survey about this site.<br />Hoffem adborth ar ddiwedd eich ymweliad.", buttons: [{ label: "Yes - click 'feedback' tab when ready", participate: true, language: "en-GB", css: "socitm_button socitm_btn_y", href: SOCITM_BASE_URL + "/survey.aspx?code=" + socitm.conf.code + "&lang_code=" + "en-GB" }, { label: "No", participate: false, language: "en-GB", css: "socitm_button socitm_btn_n", href: "#" }, { label: "Iawn - cliciwch y tab 'adborth' pan fyddwch yn barod", participate: true, language: "cy-GB", css: "socitm_button socitm_btn_y", href: SOCITM_BASE_URL + "/survey.aspx?code=" + socitm.conf.code + "&lang_code=" + "cy-GB" }, { label: "Na", participate: false, language: "cy-GB", css: "socitm_button socitm_btn_n", href: "#" }] }, exit: { css: "socitm_exit", intro: "", buttons: [{ label: "Feedback / Adborth", participate: true, language: e, css: "socitm_button socitm_btn_y", href: SOCITM_BASE_URL + "/survey.aspx?code=" + socitm.conf.code + "&lang_code=" + e }] } } } break; default: { return { entry: { css: "socitm_entry", intro: "Please complete a short survey about this site.", buttons: [{ label: "Yes - click 'feedback' tab when ready", participate: true, language: e, css: "socitm_button socitm_btn_y", href: SOCITM_BASE_URL + "/survey.aspx?code=" + socitm.conf.code + "&lang_code=" + e }, { label: "No", participate: false, language: e, css: "socitm_button socitm_btn_n", href: "#" }] }, exit: { css: "socitm_exit", intro: "", buttons: [{ label: "Feedback", participate: true, language: e, css: "socitm_button socitm_btn_y", href: SOCITM_BASE_URL + "/survey.aspx?code=" + socitm.conf.code + "&lang_code=" + e }] } } } break } } }; socitm.utils = { getCookie: function (e) { if (document.cookie.length > 0) { var t = document.cookie.indexOf(e + socitm.conf.supersetid + "="); if (t !== -1) { t = t + e.length + socitm.conf.supersetid.length + 1; var n = document.cookie.indexOf(";", t); if (n === -1) { n = document.cookie.length } return unescape(document.cookie.substring(t, n)) } } return "" }, addElement: function (e, t, n) { var r = document.createElement(e); for (var i in t) { if (t.hasOwnProperty(i)) { if (i !== "class") { r.setAttribute(i, t[i]) } else { r.setAttribute("class", t[i]) || r.setAttribute("className", t[i]) } } } if (n != null) { document.getElementsByTagName(n)[0].appendChild(r) } return r }, addClick: function (e, t) { e.clickhandler = t; if (e.addEventListener) { e.addEventListener("click", function (t) { e["clickhandler"](t) }, true) } else if (e.attachEvent) { e.attachEvent("onclick", function (t) { e["clickhandler"](t) }) } else { var n = e["onclick"]; if (n) { e["onclick"] = function (t) { n(t); e["clickhandler"](t) } } else { e["onclick"] = e["clickhandler"] } } return false }, slide: function (e, t) { var n = parseInt(t.clientHeight); var r = 500, i = 50, s = 0, o = 0; var u = (new Date).getTime(); if (e === "up") { o = 0 - n; var s = n / (r / i) } else { var s = n / (r / i) * -1 } var a = setInterval(function () { var e = (new Date).getTime() - u; if (e <= r) { o += s; t.style.bottom = o + "px" } else { t.style.bottom = "0px"; clearInterval(a) } }, i) }, setCookie: function (e, t, n) { var r = new Date; r.setDate(r.getDate() + n); document.cookie = e + socitm.conf.supersetid + "=" + escape(t) + (n === null ? "" : ";expires=" + r.toGMTString()) + ";path=/" }, getJSON: function (e) { var t = document.createElement("SCRIPT"); t.src = e; document.getElementsByTagName("HEAD")[0].appendChild(t); return true }, getContent: function (e) { var t = null; if (e.indexOf("http") !== 0) { e = location.protocol + "//" + location.hostname + (e.indexOf("/") === 0 ? e : "/" + e) } if (window.XMLHttpRequest) { t = new XMLHttpRequest } else { t = new ActiveXObject("Microsoft.XMLHTTP") } t.open("GET", e, false); t.send(null); return t.responseText }, areCookiesEnabled: function () { this.setCookie("socitm_test_cookies", "123", 365); var e = this.getCookie("socitm_test_cookies"); if (e === "123") { this.setCookie("socitm_test_cookies", "123", -365); return true } else { return false } }, getHeight: function () { var e = 0; if (typeof window.innerWidth === "number") { e = window.innerHeight } else if (document.documentElement && document.documentElement.clientHeight) { e = document.documentElement.clientHeight } else if (document.body && document.body.clientHeight) { e = document.body.clientHeight } return e }, getWidth: function () { var e = 0; if (typeof window.innerWidth === "number") { e = window.innerWidth } else if (document.documentElement && document.documentElement.clientWidth) { e = document.documentElement.clientWidth } else if (document.body && document.body.clientWidth) { e = document.body.clientWidth } return e }, parseConfig: function (e) { if (e) { for (var t in e) { for (var n in socitm.conf) { if (t === n && e[t] !== null && e[t].toString().length > 0) { if (socitm.conf.debug) console.log("Updating the configuration for `" + n + "` from `" + socitm.conf[n] + "` to `" + e[t] + "`"); socitm.conf[n] = e[t] } } } } socitm.conf.loaded = true }, trim: function (e) { return e.replace(/^\s\s*/, "").replace(/\s\s*$/, "") } }; setTimeout(function () { socitm.base.init() }, 250)